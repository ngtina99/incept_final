
services:
  #handle HTTP request, forward to php-Wordpress
  nginx:
    # build context with Dockerfile
    build:
      context: ./requirements/nginx
    container_name: nginx
    # do not listen until wordpress not there
    depends_on:
      - wordpress
    # host port 443 to container port 443 (HTTPS)
    ports:
      - "443:443"
    # mounts to /var/www/html inside the container to serve content, PHP-FPM socket to communicate with WordPress
    volumes:
      - wordpress_data:/var/www/html
      - /run/php:/run/php
    # bridge internal communication for containers
    networks:
      - inception
    # environment variables
    env_file:
      - .env
    # restarts/reboots if container would crash
    restart: always


  mariadb:
    build:
      context: ./requirements/mariadb
    container_name: mariadb
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception
    secrets:
      - db_root_password
      - db_user_password
    environment:
      DB_ROOT_PASSWORD_FILE: ../secrets/db_root_password
      DB_USER: ${DB_USER}
      DB_PASSWORD_FILE: ../secrets/db_user_password
      DATABASE: ${DATABASE}
    restart: always

  wordpress:
    build:
      context: ./requirements/wordpress
    container_name: wordpress
    depends_on:
      - mariadb
    volumes:
      - wordpress_data:/var/www/html
      - /run/php:/run/php
    networks:
      - inception
    secrets:
      - db_user_password
      - wp_admin_password
      - wp_user_password
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      HOST: mariadb
      DATABASE: ${DATABASE}
      DB_USER: ${DB_USER}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN: ${WP_ADMIN}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USER: ${WP_USER}
      WP_USER_EMAIL: ${WP_USER_EMAIL}
    restart: always

  mywebsite:
    build:
      context: ./requirements/mywebsite
    container_name: mywebsite
    ports:
      - "8080:80"
    networks:
      - inception
    restart: always

volumes:
  mariadb_data:
    name: srcs_mariadb_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/thuy-ngu/data/mariadb

  wordpress_data:
    name: srcs_wordpress_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/thuy-ngu/data/wordpress

secrets:
  db_root_password:
    file: ../secrets/db_root_password
  db_user_password:
    file: ../secrets/db_user_password
  wp_admin_password:
    file: ../secrets/wp_admin_password
  wp_user_password:
    file: ../secrets/wp_user_password

networks:
  inception:
    driver: bridge
